---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: loki
spec:
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9080"
    spec:
      serviceAccount: promtail-sa
      containers:
      - name: promtail
        image: grafana/promtail:3.0.0
        args:
        - -config.file=/etc/promtail/promtail.yaml
        env: 
        - name: 'HOSTNAME'
          valueFrom:
            fieldRef:
              fieldPath: 'spec.nodeName'
        ports:
          - name: http-port
            containerPort: 9080
        volumeMounts:
        - name: promtail-config
          mountPath: /etc/promtail
        - name: logs
          mountPath: /var/log
          readOnly: true
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - name: positions
          mountPath: /tmp/positions
        - name: maxmind
          mountPath: /etc/maxmind
          readOnly: true
        resources:
          limits:
            memory: 256Mi
            cpu: 300m
          requests:
            memory: 64Mi
            cpu: 100m
      volumes:
      - name: logs
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: promtail-config
        configMap:
          name: promtail-config
      - name: positions
        hostPath:
          path: /tmp/positions
      - name: maxmind
        hostPath:
          path: /etc/maxmind
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: loki
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    clients:
    - url: http://loki.loki.svc:3100/loki/api/v1/push

    positions:
      filename: /tmp/positions/positions.yaml
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: pod-logs
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_name
          target_label: job
        - action: replace
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
          target_label: __path__
      pipeline_stages:
        - cri: {}
        - labeldrop:
          - app_kubernetes_io_managed_by
          - app_kubernetes_io_part_of
          - controller_revision_hash
    
    - job_name: ingress-nginx-metrics
      kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - ingress-nginx
      relabel_configs:
        - action: replace
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
          target_label: __path__
      pipeline_stages:
        - cri: {}
        - json:
            expressions:
              client_ip: remote_address
              ingress_namespace: ingress_namespace
              status: status
              path: path
            drop_malformed: true
        - geoip:
            db: "/etc/maxmind/GeoLite2-City.mmdb"
            source: "client_ip"
            db_type: "city"
        - labelallow:
            - geoip_location_longitude
            - geoip_location_latitude
        - labels:
            client_ip:
        - labeldrop:
          - filename
          - stream
        - metrics:
            http_requests_total_ip:
              type: Counter
              description: "The total number of HTTP requests by IP."
              config:
                match_all: true
                action: inc
        - labels:
            ingress_namespace:
        - metrics:
            http_requests_total_ip_namespace:
              type: Counter
              description: "The total number of HTTP requests by IP and ingress namespace."
              config:
                match_all: true
                action: inc
        - labeldrop:
          - ingress_namespace
        - labels:
            status:
        - metrics:
            http_requests_total_ip_status:
              type: Counter
              description: "The total number of HTTP requests by IP and status."
              config:
                match_all: true
                action: inc
        - labels:
            ingress_namespace:
        - metrics:
            http_requests_total_ip_namespace_status:
              type: Counter
              description: "The total number of HTTP requests by IP, namespace and status."
              config:
                match_all: true
                action: inc
        - labels:
            path:
        - metrics:
            http_requests_total:
              type: Counter
              description: "The total number of HTTP requests."
              config:
                match_all: true
                action: inc
        - drop:
            expression: ".*"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-cr
rules:
  - apiGroups: [""]
    resources:
    - nodes
    - services
    - pods
    verbs:
    - get
    - watch
    - list

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail-sa
  namespace: loki

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-crb
subjects:
    - kind: ServiceAccount
      name: promtail-sa
      namespace: loki
roleRef:
    kind: ClusterRole
    name: promtail-cr
    apiGroup: rbac.authorization.k8s.io